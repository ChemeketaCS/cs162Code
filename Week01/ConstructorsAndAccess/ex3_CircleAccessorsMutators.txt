#include <iostream>
#include <sstream>
#include <cmath>

using namespace std;

class Circle {
private:
    //STATE/PROPERTIES
    double radius;
    double x;
    double y;

public:
    //CONSTRUCTORS
    Circle() {
        radius = 2;
        x = 0;
        y = 0;
    }

    Circle(double theRadius) {
        radius = theRadius;
        x = 0;
        y = 0;
    }

    Circle(double theRadius, double xLoc, double yLoc) {
        radius = theRadius;
        x = xLoc;
        y = yLoc;
    }

    //BEHAVIORS
    double getArea() {
        return radius * radius * 3.14;
    }

    string toString() {
        stringstream outStream;
        outStream << "Circle with ";
        outStream << "  radius: " << radius;
        outStream << "  area: " << getArea();
        outStream << "  centered at " << x << "," << y;
        return outStream.str();
    }

    //ACCESSORS
    double getX() { return x; }
    double getY() { return y; }
    double getRadius() { return radius; }

    //MUTATORS
    void setRadius(double r) {
        radius = abs(r);
    }

    void setX(double newX) {
        x = newX;
    }

    void setY(double newY) {
        y = newY;
    }

    void translate(double deltaX, double deltaY) {
        x += deltaX;
        y += deltaY;
    }
};

int main()
{
    Circle c1(4, 12, 3);
    cout << c1.toString() << endl;

    //Use public functions to mutate/access private values
    c1.setRadius(10);
    cout << c1.toString() << endl;
    c1.translate(2, 2);
    cout << "c1's location is: " << c1.getX() << "," << c1.getY() << endl;

    //Example of making an anonymous Circle
    // Will be printed and then immediately forgotten about
    cout << Circle(5).toString() << endl;
}